{
	"info": {
		"_postman_id": "bbb192ba-d711-4e32-b3bb-209dd78543fd",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17992364"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let token = pm.response.json();",
							"pm.environment.set(\"token\", token.token);",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/login?login=Maryna&password=111qwerty",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "Maryna"
						},
						{
							"key": "password",
							"value": "111qwerty"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//2) Проверка структуры json в ответе",
							"pm.test(\"Json-schema is ok\", function() {const schema = {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"        \"person\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"u_age\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"            \"u_name\": {",
							"                \"type\": \"array\",",
							"                \"items\": [",
							"                    {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    {",
							"                        \"type\": \"integer\"",
							"                    }",
							"                ]",
							"            },",
							"            \"u_salary_1_5_year\": {",
							"                \"type\": \"integer\"",
							"            }",
							"        },",
							"        \"required\": [",
							"            \"u_age\",",
							"            \"u_name\",",
							"            \"u_salary_1_5_year\"",
							"        ]",
							"        },",
							"       \"qa_salary_after_12_months\": {",
							"           \"type\": \"number\"",
							"       },",
							"        \"qa_salary_after_6_months\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"start_qa_salary\": {",
							"        \"type\": \"integer\"",
							"    }",
							"},",
							"\"required\": [",
							"    \"person\",",
							"    \"qa_salary_after_12_months\",",
							"    \"qa_salary_after_6_months\",",
							"    \"start_qa_salary\"",
							"  ]",
							"    }",
							"pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"//3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"let resp = pm.response.json();",
							"let req = JSON.parse(request.data);",
							"pm.test(\"Coefficient - 2\"), function () {",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(req.salary * 2);",
							"};",
							"",
							"pm.test(\"Coefficient - 2.9\"), function () {",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(req.salary * 2.9);",
							"};",
							"pm.test(\"Coefficient - 4\"), function () {",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(req.salary * 4);",
							"};",
							"//4) Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user",
							"let salary_1_5_year = resp.person.u_salary_1_5_year;",
							"pm.environment.get(\"salary_1_5_year\", salary_1_5_year);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\":27,\n    \"salary\":2000,\n    \"name\":\"Maryna\",\n    \"auth_token\": \"{{token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//2) Проверка структуры json в ответе.",
							"var schema = {",
							"     \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"salary\": {",
							"      \"type\": \"array\",",
							"      \"items\": [",
							"        {",
							"          \"type\": \"integer\"",
							"        },",
							"        {",
							"          \"type\": \"string\"",
							"        },",
							"        {",
							"          \"type\": \"string\"",
							"        }",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"name\",",
							"    \"salary\"",
							"  ]",
							"}",
							"",
							"var response = pm.response.json();",
							"pm.test('Schema is valid', function () {",
							"    pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});",
							"//3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"pm.test('Coefficient salary -2', function () {",
							"    pm.expect(+response.salary[1]).to.eql(request.data.salary * 2);",
							"});",
							"pm.test('Coefficient salary -3', function () {",
							"    pm.expect(+response.salary[2]).to.eql(request.data.salary * 3);",
							"});",
							"//4) проверить, что 2-й элемент массива salary больше 1-го и 0-го",
							"pm.test(\"Checking elements\", function () {",
							"    pm.expect(+response.salary[2] > +response.salary[0], response.salary[1]).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Maryna",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//2) Проверка структуры json в ответе.",
							"var schema = {",
							" \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"daily_food\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"daily_sleep\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"daily_food\",",
							"    \"daily_sleep\",",
							"    \"name\"",
							"  ]",
							"}",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});",
							"//3) В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"pm.test('Check daily food', function () {",
							"    pm.expect(+response.daily_food).to.eql(request.data.weight * 0.012);",
							"});",
							"pm.test('Check daily sleep', function () {",
							"    pm.expect(+response.daily_sleep).to.eql(request.data.weight * 2.5);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "50",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Maryna",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//2) Проверка структуры json в ответе.",
							"var schema = {",
							"    \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"family\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"children\": {",
							"          \"type\": \"array\",",
							"          \"items\": [",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            },",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            }",
							"          ]",
							"        },",
							"        \"u_salary_1_5_year\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"children\",",
							"        \"u_salary_1_5_year\"",
							"      ]",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"salary\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"family\",",
							"    \"name\",",
							"    \"salary\"",
							"  ]",
							"}",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});",
							"//3) Проверить что значение поля name = значению переменной name из окружения",
							"pm.test('name = req name environment', function() {",
							"    pm.expect(response.name).to.eql(pm.environment.get(\"name\"));",
							"});",
							"//4) Проверить что значение поля age в ответе соответсвует отправленному в запросе значению поля age",
							"pm.test('age matching', function() {",
							"    pm.expect(response.age).to.eql(request.data.age);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Maryna",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		}
	]
}